//	1.	Удалить из массива все четные числа.
//2.	Вставить новый элемент после всех элементов, которые заканчиваются на данную цифру.
//3.	Удалить из массива повторяющиеся элементы, оставив только их первые вхождения.
//4.	Вставить новый элемент между всеми парами элементов, имеющими разные знаки.
//5.	Уплотнить массив, удалив из него все нулевые значения.

using System;
namespace ConsoleApplication
{
    class Class
    {
        static int[] Input()
        {
            
                
                Console.WriteLine("введите размерность массива");
//try
//            {
                int n = int.Parse(Console.ReadLine());
                //if (n < 0) throw new Exception();
            //}
            //catch { Console.WriteLine("размерность массива должна быть больше нуля"); }
            int[] a = new int[n];
            for (int i = 0; i < n; ++i)
            {
                Console.Write("a[{0}]= ", i);
                a[i] = int.Parse(Console.ReadLine());
            }

        return a;
 
        }

        
        static void Print(int[] a, int n)
        {
            for (int i = 0; i < n; ++i)
                Console.Write("{0} ", a[i]);
                Console.WriteLine();
        }

        static int[] Udalit(int[] a, ref int n)
        {
            for (int i = 0; i < n; ++i)
             if (a[i]%2==0)
             {
                 for (int ii = i; ii < n-1; ++ii)
                 a[ii] = a[ii+1];
               n--;
               i--;
                }
            
            Console.WriteLine();
            return a;
        }

        static int[] Dobavit(int[] a, ref int n, int p)
        {

            for (int i = 0; i < a.Length; i++)
                if (a[i] == p)
                {
                    
                    for (int ii = n; ii > i; ii--)
                    a[ii] = a[ii-1];
                    a[i] = p;
                    ++n;
                    i++;
                }

            Console.WriteLine();
            
            return a;
        }

        static int[] UdalitPovtor(int[] a, ref int n)
       
        {
            int k = 1;
            int flag;
            for (int i = 1; i < n; ++i)
            {
                flag = 0;
                for (int j = 0; j < k; ++j)
                    if (a[i] == a[j])
                        flag = 1;
                if (flag != 1)
                {
                    a[k] = a[i];
                    k++;
                    
                }
            }
            n = k;
            for (int i = k; i < a.Length; ++i)
                a[i] = 0;
            Console.WriteLine();
            return a;
        }

        static int[] Dobavit0(int[] a, ref int n)
       {

            for (int i = 0; i < n; i++)
                if ((a[i] >0) && (a[i+1] <0) || (a[i] <0) && (a[i+1] >0))
                {
                    
                    for (int ii = n; ii > i; ii--)
                    a[ii] = a[ii-1];
                    a[i+1] = 0;
                    ++n;
                    i++;
                }

            Console.WriteLine();
            
            return a;
        }
        
            static int[] Udalit0(int[] a, ref int n)
        {
            for (int i = 0; i < n; ++i)
             if (a[i] == 0)
             {
                 for (int ii = i; ii < n-1; ++ii)
                 a[ii] = a[ii+1];
               n--;
               i--;
                }
            
            Console.WriteLine();
            return a;
        }
        

        static void Main()
        {
           
            try
            {
                int[] myArray = Input();
                Console.WriteLine("исходный массив:");
                int n = myArray.Length;
                Print(myArray, n);
                myArray=Udalit(myArray, ref n);
                Console.WriteLine("массив без четных чисел:");
                Print(myArray, n);
                Console.WriteLine("введите цифру, после которой добавлять элементы:");
                int p = int.Parse(Console.ReadLine());
                myArray = Dobavit(myArray, ref n, p);
                Console.WriteLine("массив c добавленной цифрой:");
                Print(myArray, n);
                myArray = UdalitPovtor(myArray, ref n);
                Console.WriteLine("массив без повторов:");
                Print(myArray, n);
                myArray = Dobavit0(myArray, ref n);
                Console.WriteLine("массив c 0 между парами элементов разных знаков:");
                Print(myArray, n);
                myArray = Udalit0(myArray, ref n);
                Console.WriteLine("массив без 0:");
                Print(myArray, n);
                
            }
            catch (FormatException)                
            {
                    Console.WriteLine("неверный формат ввода данных");                
            }
                catch (OverflowException)
                {
                    Console.WriteLine("переполнение");
                }
                catch (OutOfMemoryException)                
            {                   
 Console.WriteLine("недостаточно памяти для создания нового объекта");       
                }            
                catch { Console.WriteLine("в программе возникла ошибка"); }
            Console.Read();
        }
    }
}